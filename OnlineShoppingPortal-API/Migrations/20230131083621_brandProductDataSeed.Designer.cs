// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineShoppingPortal_API.Data;

#nullable disable

namespace OnlineShoppingPortalAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230131083621_brandProductDataSeed")]
    partial class brandProductDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Brand", (string)null);

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "Pasar",
                            CategoryId = 101
                        },
                        new
                        {
                            BrandId = 2,
                            BrandName = "TasteMaxx",
                            CategoryId = 101
                        },
                        new
                        {
                            BrandId = 3,
                            BrandName = "FairP",
                            CategoryId = 102
                        },
                        new
                        {
                            BrandId = 4,
                            BrandName = "Deli",
                            CategoryId = 103
                        },
                        new
                        {
                            BrandId = 5,
                            BrandName = "Nutri GO",
                            CategoryId = 103
                        },
                        new
                        {
                            BrandId = 6,
                            BrandName = "Quechzxc",
                            CategoryId = 104
                        });
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.BrandProduct", b =>
                {
                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("BrandId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("BrandProducts");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            BrandId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            BrandId = 3,
                            ProductId = 3
                        },
                        new
                        {
                            BrandId = 3,
                            ProductId = 4
                        },
                        new
                        {
                            BrandId = 4,
                            ProductId = 5
                        },
                        new
                        {
                            BrandId = 5,
                            ProductId = 6
                        },
                        new
                        {
                            BrandId = 6,
                            ProductId = 7
                        },
                        new
                        {
                            BrandId = 6,
                            ProductId = 8
                        });
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.CardDetail", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<string>("Bank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CardNo")
                        .HasColumnType("int");

                    b.Property<string>("CardType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardholderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardId");

                    b.ToTable("CardDetail", (string)null);
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<float>("TotalCost")
                        .HasColumnType("real");

                    b.HasKey("CartId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.CartItem", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CartItemId"));

                    b.Property<int?>("CartId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("TotalCost")
                        .HasColumnType("int");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("CartItem", (string)null);
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("SegmentId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = 101,
                            CategoryName = "Vegetables",
                            SegmentId = 101
                        },
                        new
                        {
                            CategoryId = 102,
                            CategoryName = "Fruits",
                            SegmentId = 101
                        },
                        new
                        {
                            CategoryId = 103,
                            CategoryName = "Finger Food",
                            SegmentId = 103
                        },
                        new
                        {
                            CategoryId = 104,
                            CategoryName = "Drinks",
                            SegmentId = 103
                        });
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZIP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            EmailId = "adminuser@mail.com",
                            FirstName = "Master",
                            LastName = "User",
                            Password = "0VT5s7zLvBycKO1sFrhtcBIQICNCmqPspfmuWpBESX/XSKx3",
                            Role = "admin",
                            UserName = "AdminMasterUser01"
                        });
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<string>("Amount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CardDetailsCardId")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("CardDetailsCardId");

                    b.HasIndex("CartId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("ProductDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductPrice")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductDescription = "A green vegetable",
                            ProductModel = "66A",
                            ProductName = "Leek",
                            ProductPrice = 30
                        },
                        new
                        {
                            ProductId = 2,
                            ProductDescription = "An orange edible, safe for consumption",
                            ProductModel = "67B",
                            ProductName = "Carrot",
                            ProductPrice = 50
                        },
                        new
                        {
                            ProductId = 3,
                            ProductDescription = "A red, juicy and sweet fruit",
                            ProductModel = "68X",
                            ProductName = "Apple",
                            ProductPrice = 70
                        },
                        new
                        {
                            ProductId = 4,
                            ProductDescription = "Top grade, Japan Import, perishable, good for gifts",
                            ProductModel = "69Z",
                            ProductName = "Honey Dew",
                            ProductPrice = 5000
                        },
                        new
                        {
                            ProductId = 5,
                            ProductDescription = "(1kg) Savory, munchable, to-go, kids love it!",
                            ProductModel = "70S",
                            ProductName = "Nugget",
                            ProductPrice = 300
                        },
                        new
                        {
                            ProductId = 6,
                            ProductDescription = "Mini-ones for quick breakfast on busy days",
                            ProductModel = "71M",
                            ProductName = "Sandwich",
                            ProductPrice = 250
                        },
                        new
                        {
                            ProductId = 7,
                            ProductDescription = "For guilty diet, sweet, no sugar added",
                            ProductModel = "72L",
                            ProductName = "Diet Coke",
                            ProductPrice = 30
                        },
                        new
                        {
                            ProductId = 8,
                            ProductDescription = "Just like Coke but blue can, maybe better",
                            ProductModel = "73P",
                            ProductName = "Pepsi",
                            ProductPrice = 30
                        });
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Segment", b =>
                {
                    b.Property<int>("SegmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SegmentId"));

                    b.Property<string>("SegmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SegmentId");

                    b.ToTable("Segment", (string)null);

                    b.HasData(
                        new
                        {
                            SegmentId = 101,
                            SegmentName = "Organic"
                        },
                        new
                        {
                            SegmentId = 102,
                            SegmentName = "Halal"
                        },
                        new
                        {
                            SegmentId = 103,
                            SegmentName = "On-the-Go"
                        });
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Brand", b =>
                {
                    b.HasOne("OnlineShoppingPortal_API.Models.Category", "Category")
                        .WithMany("Brands")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.BrandProduct", b =>
                {
                    b.HasOne("OnlineShoppingPortal_API.Models.Brand", "Brand")
                        .WithMany("BrandProducts")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineShoppingPortal_API.Models.Product", "Product")
                        .WithMany("BrandProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Cart", b =>
                {
                    b.HasOne("OnlineShoppingPortal_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.CartItem", b =>
                {
                    b.HasOne("OnlineShoppingPortal_API.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId");

                    b.HasOne("OnlineShoppingPortal_API.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Category", b =>
                {
                    b.HasOne("OnlineShoppingPortal_API.Models.Segment", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Payment", b =>
                {
                    b.HasOne("OnlineShoppingPortal_API.Models.CardDetail", "CardDetails")
                        .WithMany()
                        .HasForeignKey("CardDetailsCardId");

                    b.HasOne("OnlineShoppingPortal_API.Models.Cart", "Cart")
                        .WithMany()
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardDetails");

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Brand", b =>
                {
                    b.Navigation("BrandProducts");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Category", b =>
                {
                    b.Navigation("Brands");
                });

            modelBuilder.Entity("OnlineShoppingPortal_API.Models.Product", b =>
                {
                    b.Navigation("BrandProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
